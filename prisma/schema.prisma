generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  password  String
  createdAt DateTime @default(now())
  isAdmin   Boolean  @default(false)
  isDeleted Boolean  @default(false)

  Transactions Transaction[]
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String
  count     Int      @default(0)
  perBag    Int      @default(0)
  createdAt DateTime @default(now())

  transactions Transaction[]
  Supply       Supply[]
}

enum FinanceType {
  income
  expense
}

model FinanceList {
  id      Int         @id @default(autoincrement())
  name    String      @unique
  type    FinanceType
  Finance Finance[]
}

model Finance {
  type  FinanceType
  srcId Int
  month String
  year  String
  price Float       @default(0)
  src   FinanceList @relation(fields: [srcId], references: [id])

  @@id([srcId, month, year, type])
}

model Supply {
  id    Int    @id @default(autoincrement())
  srcId Int
  month String
  year  String
  price Float  @default(0)
  count Int    @default(0)
  src   Item   @relation(fields: [srcId], references: [id])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  for       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  by        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  message   String
  createdAt DateTime @default(now())

  itemId Int
  userId Int
}

model meta {
  key   String @id
  value String
}
