generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  password  String
  createdAt DateTime @default(now())
  isAdmin   Boolean  @default(false)
  isDeleted Boolean  @default(false)

  Transactions Transaction[]
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String
  count     Int      @default(0)
  perBag    Int      @default(0)
  createdAt DateTime @default(now())

  transactions Transaction[]
}

model incomeList {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  Income Income[]
}

model Income {
  srcId Int
  month String
  year  String
  price Float      @default(0)
  src   incomeList @relation(fields: [srcId], references: [id])

  @@id([srcId, month, year])
}

model expenseList {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  Expense Expense[]
}

model Expense {
  srcId Int
  month String
  year  String
  price Float       @default(0)
  src   expenseList @relation(fields: [srcId], references: [id])

  @@id([srcId, month, year])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  for       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  by        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  message   String
  createdAt DateTime @default(now())

  itemId Int
  userId Int
}

model meta {
  key   String @id
  value String
}
